#BlueJ class context
comment0.target=InventoryItem
comment0.text=\r\n\ InventoryItem\:\ Constructs\ the\ inventory\ item\ object\ and\ holds\ the\ manipulators/getters\r\n\ \ \ \ \ \ \ \ \r\n\ \ @author\ Trevor\ Storey\r\n\ \ @version\ V_1.0\r\n\ \ \r\n\ \ Assignment\:\ 7\r\n\ \ Course\:\ ADEV-1003\r\n\ \ Section\:\ 2\r\n\ \ Date\ Created\:\ March\ 27,\ 2018\r\n\ \ Last\ updated\:\ March\ 27,\ 2018\ \r\n\ \r\n
comment1.params=partNumber\ description\ quantityOnHand\ unitCost
comment1.target=InventoryItem(java.lang.String,\ java.lang.String,\ int,\ double)
comment1.text=\r\n\ Constructs\ the\ inventory\ item\ object\r\n\ \r\n\ @param\ partNumber\ the\ number\ of\ the\ part\r\n\ @param\ description\ a\ description\ of\ what\ the\ part\ is\r\n\ @param\ quantityOnHand\ total\ number\ of\ parts\r\n\ @param\ unitCost\ the\ cost\ per\ unit\r\n\ \r\n
comment10.params=unitCost
comment10.target=void\ setUnitCost(double)
comment10.text=\r\n\ sets\ the\ unit\ cost\ per\ single\ unit\ \r\n\ \r\n\ @param\ unitCost\ the\ cost\ of\ a\ single\ unit\r\n\ \r\n
comment11.params=
comment11.target=double\ getTotalInventoryCost()
comment11.text=\r\n\ Calculates\ the\ total\ cost\ of\ the\ whole\ inventory\ \r\n\ \r\n\ @return\ this\ returns\ the\ cost\ per\ unit\ *\ the\ quantity.\ This\ is\ the\ total\ cost\r\n\ \r\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\r\n\ toString\ gives\ a\ format\ to\ print\ in\ and\ what\ variables\ to\ print\r\n\ \r\n\ @return\ this\ returns\ the\ string\ format\ outlined\ in\ the\ assignment\r\n\ \r\n
comment2.params=partNumber\ description\ unitCost
comment2.target=InventoryItem(java.lang.String,\ java.lang.String,\ double)
comment2.text=\r\n\ Constructs\ the\ inventory\ item\ object\ when\ there\ is\ no\ quantity\ available\r\n\ \r\n\ @param\ partNumber\ the\ number\ of\ the\ part\r\n\ @param\ description\ a\ description\ of\ what\ the\ part\ is\ \r\n\ @param\ unitCost\ the\ cost\ per\ unit\r\n\ \r\n
comment3.params=
comment3.target=java.lang.String\ getPartNumber()
comment3.text=\r\n\ returns\ the\ part\ number\ \r\n\ \r\n\ @return\ the\ number\ of\ the\ part\r\n\ \r\n
comment4.params=partNumber
comment4.target=void\ setPartNumber(java.lang.String)
comment4.text=\r\n\ sets\ the\ part\ number\ to\ whatever\ is\ input\r\n\ \r\n\ @param\ partNumber\ the\ number\ of\ the\ part\r\n\ \r\n
comment5.params=
comment5.target=java.lang.String\ getDescription()
comment5.text=\r\n\ returns\ a\ description\ of\ the\ part\r\n\ \r\n\ @return\ a\ decription\ of\ the\ part\r\n\ \r\n
comment6.params=description
comment6.target=void\ setDescription(java.lang.String)
comment6.text=\r\n\ sets\ the\ description\ to\ whatever\ is\ input\ \r\n\ \r\n\ @param\ description\ a\ description\ of\ the\ part\r\n\ \r\n
comment7.params=
comment7.target=int\ getQuantityOnHand()
comment7.text=\r\n\ Returns\ how\ many\ of\ a\ certain\ part\ we\ have\r\n\ \r\n\ @return\ a\ count\ of\ the\ quantity\ \r\n\ \r\n
comment8.params=quantityOnHand
comment8.target=void\ setQuantityOnHand(int)
comment8.text=\r\n\ sets\ the\ quantity\ on\ hand.\ If\ less\ than\ 0\ it\ resets\ to\ 0\r\n\ \r\n\ @param\ quantityOnHand\ the\ total\ number\ of\ a\ certain\ item\ we\ have\r\n\ \r\n
comment9.params=
comment9.target=double\ getUnitCost()
comment9.text=\r\n\ returns\ the\ cost\ of\ a\ single\ unit\r\n\ \r\n\ @return\ the\ total\ cost\ of\ a\ single\ unit\r\n\ \r\n
numComments=13
